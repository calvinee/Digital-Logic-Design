HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			16 [DEPTH=0,WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result4,result3,result2,result1,result0,data4,data3,data2,data1,data0];
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=3,DEPTH=0] [result2,result1,result0,data2,data1,data0];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [result1,result0,data1,data0];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [result0,data0];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=20,DEPTH=0] [result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data19,data18,data17,data16,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
		}
	}
	look_add.tdf
	{
		look_add [USE_LPM_FOR_AHDL_OPERATORS,width,CARRY_CHAIN,DEVICE_FAMILY] [aglobal.inc,look_add.inc]
		{
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=1,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=MAX7000S] [cout0,bg_in0,bp_in0,cin];
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=3,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=MAX7000S] [cout2,cout1,cout0,bg_in2,bg_in1,bg_in0,bp_in2,bp_in1,bp_in0,cin];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			15 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S] [result4,result3,result2,result1,result0,bg_out,bp_out,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0,cin];
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S] [result2,result1,result0,bg_out,bp_out,dataa2,dataa1,dataa0,datab2,datab1,datab0,cin];
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S] [result1,result0,bg_out,bp_out,dataa1,dataa0,datab1,datab0,cin];
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S] [result7,result6,result5,result4,result3,result2,result1,result0,bg_out,bp_out,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S] [result3,result2,result1,result0,bg_out,bp_out,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=5,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=10,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S,STYLE=FAST] [RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=3,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=10,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S,STYLE=FAST] [RESULT2,RESULT1,RESULT0,CIN,DATAB2,DATAB1,DATAB0,DATAA2,DATAA1,DATAA0];
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=10,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S,STYLE=FAST] [RESULT1,RESULT0,CIN,DATAB1,DATAB0,DATAA1,DATAA0];
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=20,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=10,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX7000S,STYLE=FAST] [RESULT19,RESULT18,RESULT17,RESULT16,RESULT15,RESULT14,RESULT13,RESULT12,RESULT11,RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB19,DATAB18,DATAB17,DATAB16,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA19,DATAA18,DATAA17,DATAA16,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
		}
	}
	clock.vhd
	{
		clock [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	clock::(0,0):(0): clock.vhd
	{
		lpm_add_sub:11:(169,5):(6984): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(102,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(94,carry_ext_latency_ffs): altshift.tdf;
			altshift:13:(222,2):(82,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(74,look_aheader): look_add.tdf;
			addcore:12:(215,9):(43,adder0): addcore.tdf;
		}
		lpm_add_sub:14:(131,5):(5631): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(112,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(104,carry_ext_latency_ffs): altshift.tdf;
			altshift:16:(222,2):(88,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(80,look_aheader): look_add.tdf;
			addcore:15:(215,9):(49,adder0): addcore.tdf;
		}
		lpm_add_sub:14:(125,5):(5072): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(112,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(104,carry_ext_latency_ffs): altshift.tdf;
			altshift:16:(222,2):(88,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(80,look_aheader): look_add.tdf;
			addcore:15:(215,9):(49,adder0): addcore.tdf;
		}
		lpm_add_sub:14:(119,5):(4463): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(112,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(104,carry_ext_latency_ffs): altshift.tdf;
			altshift:16:(222,2):(88,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(80,look_aheader): look_add.tdf;
			addcore:15:(215,9):(49,adder0): addcore.tdf;
		}
		lpm_add_sub:14:(111,5):(3793): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(112,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(104,carry_ext_latency_ffs): altshift.tdf;
			altshift:16:(222,2):(88,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(80,look_aheader): look_add.tdf;
			addcore:15:(215,9):(49,adder0): addcore.tdf;
		}
		lpm_add_sub:14:(104,5):(3038): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(112,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(104,carry_ext_latency_ffs): altshift.tdf;
			altshift:16:(222,2):(88,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(80,look_aheader): look_add.tdf;
			addcore:15:(215,9):(49,adder0): addcore.tdf;
		}
		lpm_add_sub:11:(95,5):(2128): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(102,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(94,carry_ext_latency_ffs): altshift.tdf;
			altshift:13:(222,2):(82,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(74,look_aheader): look_add.tdf;
			addcore:12:(215,9):(43,adder0): addcore.tdf;
		}
		lpm_add_sub:7:(80,5):(397): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(97,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(89,carry_ext_latency_ffs): altshift.tdf;
			altshift:10:(222,2):(79,result_ext_latency_ffs): altshift.tdf;
			look_add:9:(216,4):(71,look_aheader): look_add.tdf;
			addcore:8:(215,9):(40,adder0): addcore.tdf;
		}
		lpm_add_sub:1:(57,5):(178): lpm_add_sub.tdf
		{
			altshift:6:(226,2):(255,oflow_ext_latency_ffs): altshift.tdf;
			altshift:6:(224,2):(247,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(222,2):(201,result_ext_latency_ffs): altshift.tdf;
			look_add:4:(216,4):(187,look_aheader): look_add.tdf;
			addcore:3:(215,9):(156,adder0): addcore.tdf;
			addcore:3:(215,9):(125,adder1): addcore.tdf;
			addcore:2:(215,9):(94,adder2): addcore.tdf;
		}
	}
}
