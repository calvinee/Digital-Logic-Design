HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	half_adder.gdf
	{
		half_adder [] []
		{
			1 [] [];
		}
	}
	full_adder_1.gdf
	{
		full_adder_1 [] []
		{
			2 [] [];
		}
	}
	lpm_mult.tdf
	{
		lpm_mult [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTHA,LPM_WIDTHB,LPM_WIDTHP,LPM_WIDTHR=0,LPM_WIDTHS,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,LATENCY=0,INPUT_A_IS_CONSTANT=NO,INPUT_B_IS_CONSTANT=NO,USE_EAB=OFF,MAXIMIZE_SPEED=1,OPTIMIZE_FOR_SPEED=5,DEVICE_FAMILY,CARRY_CHAIN] [altshift.inc,bypassff.inc,multcore.inc,lpm_add_sub.inc,aglobal.inc]
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTHA=3,LPM_WIDTHB=3,LPM_WIDTHP=6,LPM_WIDTHR=0,LPM_WIDTHS=1,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,LATENCY=0,INPUT_A_IS_CONSTANT=NO,INPUT_B_IS_CONSTANT=NO,USE_EAB=OFF,MAXIMIZE_SPEED=1,OPTIMIZE_FOR_SPEED=5,DEVICE_FAMILY=MAX3000A,CARRY_CHAIN=IGNORE] [DATAA0,DATAA1,DATAA2,DATAB0,DATAB1,DATAB2,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5];
		}
	}
	multcore.tdf
	{
		multcore [USE_LPM_FOR_AHDL_OPERATORS,widtha,widthb,LPM_REPRESENTATION=UNSIGNED,LATENCY=0,ONE_INPUT_IS_CONSTANT=NO,USE_EAB=OFF,MAXIMIZE_SPEED=5,OP_MODE=0,DEVICE_FAMILY,CARRY_CHAIN] [mul_boothc.inc,mul_lfrg.inc,muleabz.inc,mpar_add.inc,csa_add.inc,lpm_add_sub.inc,aglobal.inc]
		{
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,widtha=3,widthb=3,LPM_REPRESENTATION=UNSIGNED,LATENCY=1,ONE_INPUT_IS_CONSTANT=NO,USE_EAB=OFF,MAXIMIZE_SPEED=5,OP_MODE=0,DEVICE_FAMILY=MAX3000A,CARRY_CHAIN=IGNORE] [datab0,datab1,datab2,dataa0,dataa1,dataa2,result0,result1,result2,result3,result4,result5];
		}
	}
	csa_add.tdf
	{
		csa_add [USE_LPM_FOR_AHDL_OPERATORS,size=6,width=4,END_ADDER=0] [lpm_add_sub.inc,csa_add.inc,csa_cell.inc]
		{
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,size=6,width=3,END_ADDER=1] [data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data2_0,data2_1,data2_2,data2_3,data2_4,data2_5,result0,result1,result2,result3,result4,result5];
		}
	}
	csa_cell.tdf
	{
		csa_cell [USE_LPM_FOR_AHDL_OPERATORS,SIZE=6] []
		{
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=6] [data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data2_0,data2_1,data2_2,data2_3,data2_4,data2_5,carry_out0,carry_out1,carry_out2,carry_out3,carry_out4,carry_out5,sum_out0,sum_out1,sum_out2,sum_out3,sum_out4,sum_out5];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=UNSIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX3000A,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,cin,cout,result0,result1,result2,result3,result4,result5,result6];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX3000A] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,cout,result0,result1,result2,result3,result4,result5,result6];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=0,DEVICE_FAMILY=MAX3000A] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6,result7];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,result0,result1,result2,result3,result4,result5,result6];
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,DEPTH=0] [data0,data1,data2,data3,data4,data5,result0,result1,result2,result3,result4,result5];
		}
	}
	mul_3x3.vhd
	{
		mul_3x3 [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	mul_3x3::(0,0):(0): mul_3x3.vhd
	{
		lpm_mult:4:(15,5):(13): lpm_mult.tdf
		{
			multcore:5:(264,5):(43,mult_core): multcore.tdf
			{
				csa_add:6:(260,8):(42,padder): csa_add.tdf
				{
					csa_cell:7:(57,11):(59,adder0): csa_cell.tdf;
					lpm_add_sub:8:(66,3):(91,cpa_adder): lpm_add_sub.tdf
					{
						addcore:9:(212,4):(55,adder): addcore.tdf
						{
							addcore:10:(178,10):(52,adder0): addcore.tdf;
						}
						altshift:11:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
						altshift:12:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
						altshift:12:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
					}
				}
			}
			altshift:13:(291,3):(67,external_latency_ffs): altshift.tdf;
		}
	}
}
